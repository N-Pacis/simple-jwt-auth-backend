name: Run Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - '${{ secrets.DB_PORT }}:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      JWT_KEY: ${{ secrets.JWT_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Connect to database
        run: mysql -h $DB_HOST --port $DB_PORT -u $DB_USER -p$DB_PASSWORD -e 'CREATE DATABASE IF NOT EXISTS $DB_NAME;'

      - name: Set up environment variables
        run: |
          echo "DB_HOST=${DB_HOST}" >> $GITHUB_ENV
          echo "DB_PORT=${DB_PORT}" >> $GITHUB_ENV
          echo "DB_USER=${DB_USER}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${DB_PASSWORD}" >> $GITHUB_ENV
          echo "DB_NAME=${DB_NAME}" >> $GITHUB_ENV
          echo "JWT_KEY=${JWT_KEY}" >> $GITHUB_ENV # Set the JWT key

      - name: Install dockerize
        run: |
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
          tar -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
          sudo mv dockerize /usr/local/bin/dockerize
          rm dockerize-linux-amd64-v0.6.1.tar.gz

      - name: Install sequelize-cli
        run: npm install -g sequelize-cli

      - name: Wait for MySQL to be ready
        run: dockerize -wait tcp://${DB_HOST}:${DB_PORT} -timeout 1m

      - name: Install dependencies
        run: npm install

      - name: Run Sequelize migrations
        run: npx sequelize-cli db:migrate --env actions

      - name: Run tests
        run: npm test
